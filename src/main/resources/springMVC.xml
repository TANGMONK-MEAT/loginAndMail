<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    配置SpringMVC的bean扫描器,只扫描Controller-->
    <context:component-scan base-package="com.ml.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--==================================================================================================-->

<!--    配置视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".html"/>
    </bean>

<!--====================================================================================================-->

    <!--
默认的前端控制器时拦截所有请求，除了jsp文件，所有静态资源（js/css/images等）都会404
加上一下两个配置可以保证，静态资源和动态资源都可以访问
-->
    <!--
    告诉SpringMVC，自己可以映射的请求就自己处理，处理不了的请求直接交给tomcat
    这时可以处理静态资源和jsp资源
    但是，此时SpringMVC不能处理@RequestMapping这个注解
    -->
    <mvc:default-servlet-handler/>
    <!--  保证可以处理@RequestMapping这个注解  -->
    <mvc:annotation-driven/>

</beans>